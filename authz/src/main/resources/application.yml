spring:
  application:
    name: authz
  r2dbc:
    url: ${R2DBC_URL:r2dbc:postgresql://localhost:5432/postgres}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:google_client_id}
            client-secret: ${GOOGLE_CLIENT_SECRET:google_client_secret}
            redirect-uri: "${ibento.authn.baseurl}/login/oauth2/code/google"
          self:
            client-id: ${SELF_CLIENT_ID:self_client_id}
            client-secret: ${SELF_CLIENT_SECRET:self_client_secret}
            redirect-uri: "${ibento.authn.baseurl}/login/oauth2/code/self"
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:admin}
    password: ${RABBITMQ_PASSWORD:admin}
ibento:
  authn:
    baseurl: ${AUTHN_BASE_URL:http://localhost:7001}
    session:
      timeout: ${SESSION_TIMEOUT:1800}
  authz:
    baseurl: ${AUTHZ_BASE_URL:http://localhost:6001}
    code:
      timeout: ${AUTHZ_CODE_TIMEOUT:300}
      secret: ${AUTHZ_CODE_SECRET:secret}
    refresh:
      timeout: ${AUTHZ_REFRESH_TIMEOUT:21600}
  nextjs:
    baseurl: ${NEXTJS_BASE_URL:http://localhost:3000}
server:
  port: 6001
logging:
  level:
    root: ${LOGGING_LEVEL:info}